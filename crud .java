package qwerty;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author hp
 */
public class crud extends javax.swing.JFrame {

    Connection con;
    Statement st;
    ArrayList<User> crud = new ArrayList<>();
    public crud() {
        initComponents();
        fetch();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter your data");

        jLabel2.setText("First Name");

        jLabel3.setText("Last Name");

        jLabel4.setText("Registration Number");

        jTextField1.setText(" ");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Registration Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudents);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(jButton2)
                .addGap(37, 37, 37)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String fname = jTextField1.getText().trim();
        String lname = jTextField2.getText().trim();
        String rno = jTextField3.getText();
        if(!fname.isEmpty() && !lname.isEmpty() && !rno.isEmpty())
        {
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aptech","root","root");
                String sql = "select * from crud where RegistrationNumber='" + rno + "'";
                PreparedStatement st = con.prepareStatement("select * from crud where RegistrationNumber'" + rno + "'");
                ResultSet rs = st.executeQuery(sql);
                if(!rs.first())
                {
                    saveUser(fname,lname,rno);
                    DefaultTableModel model = (DefaultTableModel) tblStudents.getModel();
                    Object[] row = new Object[4];
                    row[0] = fname;
                    row[1] = lname;
                    row[2] = rno;
                    model.addRow(row);
                }
                else
                {
                    alert("Please provide a different registration number","Similar id found");
                    
                      
                }
                clear();
            }
            catch(SQLException | ClassNotFoundException ex)
            {
                Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try
                {
                    con.close();
                    st.close();
                }
                catch(Exception e)
                {
                    Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        }   //else if (!id.matches("^[0-9](8)$")
            //{ alert("please provide a valid registration number","Wrong id");
            //}
        else
        {
            alert("Please fill in all the details");
                   
        }
        
        
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        int i = tblStudents.getSelectedRow();
        if(i>=0)
        {
            int option = JOptionPane.showConfirmDialog(rootPane,"Are you sure you want to Delete?","Delete Confirmation",JOptionPane.YES_NO_OPTION);
            if(option==0)
            {
                TableModel model = tblStudents.getModel();
                String id = model.getValueAt(i,2).toString();
                if(tblStudents.getSelectedRows().length == 1)
                {
                    delete(id);
                    DefaultTableModel model1 = (DefaultTableModel) tblStudents.getModel();
                    model1.setRowCount(0);
                    fetch();
                    clear();
                }
            }
        }
        else
        {
            alert("Please select a row to delete");
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String fname = jTextField1.getText().trim();
        String lname = jTextField2.getText().trim();
        String id = jTextField3.getText().trim();
        if(!fname.isEmpty() && !lname.isEmpty() && !id.isEmpty())
        {
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aptech","root","root");
                String sql = "select * from crud where RegistrationNumber='" + id +"'";
                st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if(rs.first())
                {
                    update(fname,lname,id);
                    DefaultTableModel model= (DefaultTableModel) tblStudents.getModel();
                    model.setRowCount(0);
                    fetch();
                    alert("Update was successful");
                }
                else
                {
                    alert("There is no such student","Update error");
                    clear();
                }
            }
                catch(ClassNotFoundException | SQLException ex)
                {
                        Logger.getLogger(crud.class.getName()).log(Level.SEVERE,null,ex);
                }
            }
            else
            {
                    alert("There is nothing to update :( ","No row selected");
            }
        
    }                                        

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {                                         
        int i = tblStudents.getSelectedRow();
        TableModel model = tblStudents.getModel();
        jTextField1.setText(model.getValueAt(i,0).toString());
        jTextField2.setText(model.getValueAt(i,1).toString());
        jTextField3.setText(model.getValueAt(i,2).toString());
    }                                        
    //set the values of a row to the textfields
   
    public void alert(String msg)
        {
            JOptionPane.showMessageDialog(rootPane,msg);
        }
        public void alert(String msg,String title)
        {
            JOptionPane.showMessageDialog(rootPane, msg,title,JOptionPane.ERROR_MESSAGE);
            
        }
        public void saveUser(String fname,String lname,String rno)
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aptech","root","root");
                String sql = "INSERT INTO crud (FirstName,LastName,RegistrationNumber)"+"VALUES ('" + fname + "','" +lname+"','"+ rno + "')";
                st = con.createStatement();
                st.execute(sql);
                
            }
            catch(ClassNotFoundException | SQLException ex)
            {
                Logger.getLogger(crud.class.getName()).log(Level.SEVERE,null,ex);
            }
        }
        public void delete(String id)
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aptech","root","root");
                String sql = "DELETE FROM crud WHERE RegistrationNumber='" + id + "'";
                st = con.createStatement();
                st.execute(sql);
            }
           catch(ClassNotFoundException | SQLException ex)
            {
                Logger.getLogger(crud.class.getName()).log(Level.SEVERE,null,ex);
            }
        }
        private void clear()
        {
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
        }
        private void fetch()
        {
        crud.clear();
        try{
             Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aptech","root","root");
                String sql ="select * from crud";
                st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while(rs.next())
                {
                    User user = new User(rs.getString("FirstName"),rs.getString("LastName"),rs.getString("RegistrationNumber"));
                    crud.add(user);
                }
                DefaultTableModel model = (DefaultTableModel) tblStudents.getModel();
                for(User user: crud)
                {
                    Object[] row = new Object[4];
                    row[0] = user.getFname();
                    row[1] = user.getLname();
                    row[2] = user.getRno();
                    model.addRow(row);
                }
        }
        catch(ClassNotFoundException | SQLException ex)
        {
            Logger.getLogger(crud.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        }
        public void update(String fname, String lname, String id)
        {
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/aptech","root","root");
                String sql = "UPDATE crud SET FirstName='" + fname + "',LastName='" + lname + "'WHERE RegistrationNumber='" + id + "'";
                st = con.createStatement();
                st.execute(sql);
                
            }
            catch(ClassNotFoundException | SQLException ex)
            {
                Logger.getLogger(crud.class.getName()).log(Level.SEVERE,null,ex);
                
            }
        }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crud().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable tblStudents;
    // End of variables declaration                   
}
